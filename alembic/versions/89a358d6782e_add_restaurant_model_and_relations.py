"""add restaurant model and relations

Revision ID: 89a358d6782e
Revises: 287f3039f1d1
Create Date: 2025-07-08 18:31:31.348746

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '89a358d6782e'
down_revision: Union[str, None] = '287f3039f1d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1. Создать таблицу ресторанов
    op.create_table('restaurants',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('address', sa.String(length=256), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    # 2. Добавить restaurant_id nullable=True
    op.add_column('categories', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_categories_restaurant_id', 'categories', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('discounts', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_discounts_restaurant_id', 'discounts', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('orders', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_orders_restaurant_id', 'orders', 'restaurants', ['restaurant_id'], ['id'])
    op.add_column('products', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fk_products_restaurant_id', 'products', 'restaurants', ['restaurant_id'], ['id'])

    # 3. Вставить дефолтный ресторан
    conn = op.get_bind()
    result = conn.execute(sa.text("""
        INSERT INTO restaurants (name, address) VALUES ('Default Restaurant', 'Default Address') RETURNING id
    """))
    default_restaurant_id = result.scalar()

    # 4. Заполнить restaurant_id у всех существующих записей
    conn.execute(sa.text(f"UPDATE categories SET restaurant_id = {default_restaurant_id}"))
    conn.execute(sa.text(f"UPDATE discounts SET restaurant_id = {default_restaurant_id}"))
    conn.execute(sa.text(f"UPDATE orders SET restaurant_id = {default_restaurant_id}"))
    conn.execute(sa.text(f"UPDATE products SET restaurant_id = {default_restaurant_id}"))

    # 5. Сделать restaurant_id NOT NULL
    with op.batch_alter_table('categories') as batch_op:
        batch_op.alter_column('restaurant_id', nullable=False)
    with op.batch_alter_table('discounts') as batch_op:
        batch_op.alter_column('restaurant_id', nullable=False)
    with op.batch_alter_table('orders') as batch_op:
        batch_op.alter_column('restaurant_id', nullable=False)
    with op.batch_alter_table('products') as batch_op:
        batch_op.alter_column('restaurant_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_products_restaurant_id', 'products', type_='foreignkey')
    op.drop_column('products', 'restaurant_id')
    op.drop_constraint('fk_orders_restaurant_id', 'orders', type_='foreignkey')
    op.drop_column('orders', 'restaurant_id')
    op.drop_constraint('fk_discounts_restaurant_id', 'discounts', type_='foreignkey')
    op.drop_column('discounts', 'restaurant_id')
    op.drop_constraint('fk_categories_restaurant_id', 'categories', type_='foreignkey')
    op.drop_column('categories', 'restaurant_id')
    op.drop_table('restaurants')
    # ### end Alembic commands ###
