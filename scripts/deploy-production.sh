#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy-production.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    if [ ! -f "env.prod.example" ]; then
        error "–§–∞–π–ª env.prod.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    if [ ! -f "docker-compose.prod.yml" ]; then
        error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    if [ ! -d "nginx" ]; then
        error "–ü–∞–ø–∫–∞ nginx –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        exit 1
    fi
    
    log "–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ‚úì"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
setup_env() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ ! -f ".env.prod" ]; then
        if [ -f "env.prod.example" ]; then
            cp env.prod.example .env.prod
            warn "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.prod –Ω–∞ –æ—Å–Ω–æ–≤–µ env.prod.example"
            warn "–í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env.prod –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!"
            echo ""
            echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
            echo "- DOMAIN_NAME: –≤–∞—à –¥–æ–º–µ–Ω"
            echo "- DB_PASSWORD: –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
            echo "- ADMIN_PASSWORD: –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            echo "- SECRET_KEY: —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞)"
            echo "- SSL_EMAIL: email –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
            echo ""
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env.prod —Ñ–∞–π–ª–∞..."
        else
            error "–§–∞–π–ª env.prod.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    source .env.prod
    
    if [ -z "$DOMAIN_NAME" ] || [ "$DOMAIN_NAME" = "your-domain.com" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å DOMAIN_NAME –≤ —Ñ–∞–π–ª–µ .env.prod"
        exit 1
    fi
    
    if [ -z "$DB_PASSWORD" ] || [ "$DB_PASSWORD" = "your_secure_db_password_here" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å DB_PASSWORD –≤ —Ñ–∞–π–ª–µ .env.prod"
        exit 1
    fi
    
    if [ -z "$ADMIN_PASSWORD" ] || [ "$ADMIN_PASSWORD" = "your_secure_admin_password_here" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ADMIN_PASSWORD –≤ —Ñ–∞–π–ª–µ .env.prod"
        exit 1
    fi
    
    if [ -z "$SECRET_KEY" ] || [ "$SECRET_KEY" = "your-super-secret-key-change-this-in-production-min-32-chars" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SECRET_KEY –≤ —Ñ–∞–π–ª–µ .env.prod"
        exit 1
    fi
    
    if [ -z "$SSL_EMAIL" ] || [ "$SSL_EMAIL" = "your-email@domain.com" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSL_EMAIL –≤ —Ñ–∞–π–ª–µ .env.prod"
        exit 1
    fi
    
    log "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ‚úì"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx —Å –¥–æ–º–µ–Ω–æ–º
update_nginx_config() {
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
    
    source .env.prod
    
    # –ó–∞–º–µ–Ω–∞ –¥–æ–º–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
    sed -i.bak "s/your-domain.com/$DOMAIN_NAME/g" nginx/conf.d/default.conf
    
    log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úì"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p ssl
    mkdir -p nginx/webroot
    mkdir -p logs
    
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã ‚úì"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_old_containers() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    docker-compose -f docker-compose.prod.yml down --remove-orphans || true
    
    log "–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
get_ssl_certificate() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."

    source .env.prod

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if [ -z "$DOMAIN_NAME" ]; then
        error "DOMAIN_NAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env.prod"
        exit 1
    fi

    if [ -z "$SSL_EMAIL" ]; then
        error "SSL_EMAIL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env.prod"
        exit 1
    fi

    # –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º nginx –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–∞
    docker-compose -f docker-compose.prod.yml up -d nginx

    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ nginx
    sleep 10

    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º email
    docker-compose -f docker-compose.prod.yml run --rm certbot certonly --webroot --webroot-path=/var/www/certbot --email "$SSL_EMAIL" --agree-tos --no-eff-email -d "$DOMAIN_NAME"

    if [ $? -eq 0 ]; then
        log "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω ‚úì"
    else
        error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    docker-compose -f docker-compose.prod.yml down
    docker-compose -f docker-compose.prod.yml up -d
    
    log "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã ‚úì"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    sleep 30  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
    if curl -f -s http://localhost > /dev/null 2>&1; then
        log "Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warn "Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    if curl -f -s http://localhost/api/restaurants > /dev/null 2>&1; then
        log "API –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warn "API –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if docker-compose -f docker-compose.prod.yml exec -T db pg_isready -U postgres > /dev/null 2>&1; then
        log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL
setup_ssl_renewal() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL
    cat > scripts/renew-ssl.sh << 'EOF'
#!/bin/bash
cd /path/to/your/project
docker-compose -f docker-compose.prod.yml run --rm certbot renew
docker-compose -f docker-compose.prod.yml restart nginx
EOF
    
    chmod +x scripts/renew-ssl.sh
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ crontab (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 –º–µ—Å—è—Ü–∞)
    (crontab -l 2>/dev/null; echo "0 2 1 */2 * /path/to/your/project/scripts/renew-ssl.sh") | crontab -
    
    log "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ ‚úì"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    check_requirements
    setup_env
    update_nginx_config
    create_directories
    stop_old_containers
    get_ssl_certificate
    start_services
    check_services
    setup_ssl_renewal
    
    log "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ! üéâ"
    echo ""
    echo "–í–∞—à –ø—Ä–æ–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
    echo "- Telegram Mini App: https://$DOMAIN_NAME"
    echo "- –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: https://$DOMAIN_NAME/admin/"
    echo "- API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://$DOMAIN_NAME/docs/"
    echo ""
    echo "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
    echo "- docker-compose -f docker-compose.prod.yml logs -f"
    echo "- docker-compose -f docker-compose.prod.yml logs -f nginx"
    echo "- docker-compose -f docker-compose.prod.yml logs -f admin"
}

# –ó–∞–ø—É—Å–∫
main "$@"
