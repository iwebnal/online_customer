#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/backup.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="/opt/backups/online_customer"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_NAME="backup_${DATE}"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
create_backup_directory() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤..."
    sudo mkdir -p $BACKUP_DIR
    sudo chown $USER:$USER $BACKUP_DIR
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤ —Å–æ–∑–¥–∞–Ω–∞ ‚úì"
}

# –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    source .env.prod
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    docker-compose -f docker-compose.prod.yml exec -T db pg_dump -U postgres online_customer > "$BACKUP_DIR/${BACKUP_NAME}_database.sql"
    
    if [ $? -eq 0 ]; then
        log "–ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω ‚úì"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
}

# –ë—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
backup_project_files() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–∏—Å–∫–ª—é—á–∞—è –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã)
    tar -czf "$BACKUP_DIR/${BACKUP_NAME}_project.tar.gz" \
        --exclude='venv' \
        --exclude='__pycache__' \
        --exclude='.git' \
        --exclude='node_modules' \
        --exclude='*.pyc' \
        --exclude='.env' \
        --exclude='logs' \
        --exclude='ssl' \
        .
    
    if [ $? -eq 0 ]; then
        log "–ë—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω ‚úì"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
}

# –ë—ç–∫–∞–ø SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
backup_ssl_certificates() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    if [ -d "ssl" ]; then
        tar -czf "$BACKUP_DIR/${BACKUP_NAME}_ssl.tar.gz" ssl/
        log "–ë—ç–∫–∞–ø SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω ‚úì"
    else
        warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ssl –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±—ç–∫–∞–ø SSL"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –±—ç–∫–∞–ø–∞
create_backup_manifest() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –±—ç–∫–∞–ø–∞..."
    
    cat > "$BACKUP_DIR/${BACKUP_NAME}_manifest.txt" << EOF
Backup created: $(date)
Backup name: $BACKUP_NAME
Database: ${BACKUP_NAME}_database.sql
Project files: ${BACKUP_NAME}_project.tar.gz
SSL certificates: ${BACKUP_NAME}_ssl.tar.gz

System information:
- Hostname: $(hostname)
- OS: $(lsb_release -d | cut -f2)
- Docker version: $(docker --version)
- Docker Compose version: $(docker-compose --version)

Project information:
- Domain: ${DOMAIN_NAME:-"not set"}
- Environment: production
EOF

    log "–ú–∞–Ω–∏—Ñ–µ—Å—Ç –±—ç–∫–∞–ø–∞ —Å–æ–∑–¥–∞–Ω ‚úì"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find $BACKUP_DIR -name "backup_*" -type d -mtime +30 -exec rm -rf {} \; 2>/dev/null || true
    find $BACKUP_DIR -name "backup_*.sql" -mtime +30 -delete 2>/dev/null || true
    find $BACKUP_DIR -name "backup_*.tar.gz" -mtime +30 -delete 2>/dev/null || true
    find $BACKUP_DIR -name "backup_*.txt" -mtime +30 -delete 2>/dev/null || true
    
    log "–°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã ‚úì"
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
restore_backup() {
    local backup_name=$1
    
    if [ -z "$backup_name" ]; then
        error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
        exit 1
    fi
    
    log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞: $backup_name"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –±—ç–∫–∞–ø–∞
    if [ ! -f "$BACKUP_DIR/${backup_name}_database.sql" ]; then
        error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: ${backup_name}_database.sql"
        exit 1
    fi
    
    if [ ! -f "$BACKUP_DIR/${backup_name}_project.tar.gz" ]; then
        error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${backup_name}_project.tar.gz"
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose -f docker-compose.prod.yml down
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
    tar -xzf "$BACKUP_DIR/${backup_name}_project.tar.gz"
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose -f docker-compose.prod.yml up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    sleep 30
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    docker-compose -f docker-compose.prod.yml exec -T db psql -U postgres -d online_customer < "$BACKUP_DIR/${backup_name}_database.sql"
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if [ -f "$BACKUP_DIR/${backup_name}_ssl.tar.gz" ]; then
        tar -xzf "$BACKUP_DIR/${backup_name}_ssl.tar.gz"
    fi
    
    log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚úì"
}

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
list_backups() {
    log "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    echo ""
    
    if [ -d "$BACKUP_DIR" ]; then
        ls -la "$BACKUP_DIR" | grep -E "(backup_|\.sql$|\.tar\.gz$)" | while read line; do
            echo "  $line"
        done
    else
        echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-backup}" in
        "backup")
            create_backup_directory
            backup_database
            backup_project_files
            backup_ssl_certificates
            create_backup_manifest
            cleanup_old_backups
            log "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! üéâ"
            echo ""
            echo "–§–∞–π–ª—ã –±—ç–∫–∞–ø–∞:"
            echo "- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $BACKUP_DIR/${BACKUP_NAME}_database.sql"
            echo "- –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞: $BACKUP_DIR/${BACKUP_NAME}_project.tar.gz"
            echo "- SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: $BACKUP_DIR/${BACKUP_NAME}_ssl.tar.gz"
            echo "- –ú–∞–Ω–∏—Ñ–µ—Å—Ç: $BACKUP_DIR/${BACKUP_NAME}_manifest.txt"
            ;;
        "restore")
            restore_backup "$2"
            ;;
        "list")
            list_backups
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [backup|restore <backup_name>|list]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  backup  - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            echo "  restore - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞"
            echo "  list    - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
