#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import sys
from pathlib import Path

def check_service(url, name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            print(f"‚úÖ {name}: –î–æ—Å—Ç—É–ø–µ–Ω ({url})")
            return True
        else:
            print(f"‚ùå {name}: –û—à–∏–±–∫–∞ {response.status_code} ({url})")
            return False
    except requests.exceptions.ConnectionError:
        print(f"‚ùå {name}: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({url})")
        return False
    except Exception as e:
        print(f"‚ùå {name}: –û—à–∏–±–∫–∞ - {e}")
        return False

def check_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    base_url = "http://localhost:8000"
    endpoints = [
        "/api/restaurants",
        "/api/products", 
        "/api/categories"
    ]
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:")
    all_working = True
    
    for endpoint in endpoints:
        url = base_url + endpoint
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                data = response.json()
                if 'restaurants' in data:
                    print(f"   ‚úÖ {endpoint}: {len(data['restaurants'])} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤")
                elif 'products' in data:
                    print(f"   ‚úÖ {endpoint}: {len(data['products'])} —Ç–æ–≤–∞—Ä–æ–≤")
                elif 'categories' in data:
                    print(f"   ‚úÖ {endpoint}: {len(data['categories'])} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            else:
                print(f"   ‚ùå {endpoint}: –û—à–∏–±–∫–∞ {response.status_code}")
                all_working = False
        except Exception as e:
            print(f"   ‚ùå {endpoint}: {e}")
            all_working = False
    
    return all_working

def main():
    print("üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã Telegram Mini App")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
    admin_ok = check_service("http://localhost:8000", "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    mini_app_ok = check_service("http://localhost:3000", "Mini App")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –µ—Å–ª–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞
    api_ok = False
    if admin_ok:
        api_ok = check_api_endpoints()
    
    print("\nüìä –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:")
    print(f"   –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if admin_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"   Mini App: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if mini_app_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"   API: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if api_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    
    if admin_ok and mini_app_ok and api_ok:
        print("\nüéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")
        print("   üì± Mini App: http://localhost:3000")
        print("   üñ•Ô∏è  –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:8000")
        return 0
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python start_all.py")
        return 1

if __name__ == "__main__":
    sys.exit(main())
